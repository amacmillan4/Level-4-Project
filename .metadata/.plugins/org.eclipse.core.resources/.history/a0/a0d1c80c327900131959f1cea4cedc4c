package project.android.bellringing;
import java.util.ArrayList;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;


public class MethodSetupMethodChoiceFragment extends Fragment {

	private LinearLayout ll; 

	private ArrayList<Method2> loadedMethods;
	private ArrayList<View> titles;
	private ArrayList<View> allViews;

	private ArrayList<View> selectedMethod;

	@Override
	public void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		setRetainInstance(true);
	}
	
	@Override
	public void onResume(){
		super.onPause();
		//MethodLab.get(getActivity()).setMethods(loadedMethods);
		//MethodLab.get(getActivity()).saveMethodData();
	}


	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState){
		// Inflate the layout for this fragment
		View view = inflater.inflate(R.layout.fragment_activity_start_method_choice, parent, false);
		ll = (LinearLayout) view.findViewById(R.id.MC_listLL);

		//Load Methods from cache
		MethodLab.get(getActivity()).loadMethods();
		loadedMethods = MethodLab.get(getActivity()).getMethods();
		
		for(Method2 m: loadedMethods){
			System.out.println("GETTING : " + m.toString());
		}

		//Variable used to display headings of methods
		titles = new ArrayList<View>();
		allViews = new ArrayList<View>();
		selectedMethod = new ArrayList<View>();
		String currentType = "";
		View test = null;

		//Display the titles and methods
		for(Method2 m: loadedMethods){


			//Add new title if it doesn't exist already
			if(!m.getType().equals(currentType)){
				currentType = m.getType();
				test = inflater.inflate(R.layout.method_choice_title, parent);
				test.setClickable(false);

				TextView t = (TextView) test.findViewById(R.id.MC_title);
				t.setText(currentType);

				ll.addView(test);
				titles.add(test);
			}

			//Add Method to list
			View item = inflater.inflate(R.layout.method_choice_item, parent);
			item = setupCheckBox(m.getMethodName(), item);
			item.setTag(R.string.View, test);
			item.setTag(R.string.Method, m);
			ll.addView(item);
			allViews.add(item);



		}

		Button b = (Button) view.findViewById(R.id.MC_Add);
		b.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent i = new Intent(getActivity(), MethodSetupMiniMethodChoiceActivity.class);
				getActivity().startActivity(i);	
				getActivity().finish();
			}
		});

		Button select = (Button) view.findViewById(R.id.MC_Select);
		select.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {

				ArrayList<Method2> a = new ArrayList<Method2>();

				if (selectedMethod.size() != 0){
					for(Method2 m: loadedMethods){
						if (((CheckBox) selectedMethod.get(0).findViewById(R.id.MC_checkbox)).getText().equals(m.getName())){
							System.out.println("CHOSEN " + m.toString());
							a.add(m);						
						}
					}
				}

				MethodLab.get(getActivity()).setChosenMethod(a);
				getActivity().finish();
			}
		});

		Button remove = (Button) view.findViewById(R.id.MC_Delete);
		remove.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {

				if (!(selectedMethod.size() == 0)){
					View view = selectedMethod.remove(0);
					ll.removeView(view);
					allViews.remove(view);
					loadedMethods.remove(view.getTag(R.string.Method));

					boolean flag = false;

					for (View t: allViews){
						if (t.getTag(R.string.View) == view.getTag(R.string.View)){
							flag = true;
							break;
						}
					}

					if (!flag){
						titles.remove((View) view.getTag(R.string.View));
						ll.removeView((View) view.getTag(R.string.View));
					}
				}

			}
		});


		return view;
	}

	private View setupCheckBox(String name, final View test){

		test.setClickable(true);
		final CheckBox title = (CheckBox) test.findViewById(R.id.MC_checkbox);
		title.setClickable(false);
		title.setText(name);

		test.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {

				//If checked then uncheck and remove
				if(title.isChecked()){
					title.setChecked(false);
					selectedMethod.remove(test); 
				}

				//Else check it, remove any other checked methods and add 
				else{
					title.setChecked(true);

					if(selectedMethod.size() > 0)
						((CheckBox) allViews.get(allViews.indexOf(selectedMethod.remove(0))).findViewById(R.id.MC_checkbox)).setChecked(false);

					selectedMethod.add(test);

				}
			}
		});

		return test;
	}
}
